# Microsoft Graph API Operations for Entra External Identity
# Status: New

# Graph API operations showcased:
# - loginWithCredentials: User credential-based login to Entra External Identity
# - listUsers: List users in the directory using Graph API
# - assignRole: Assign a directory role to a user
# - getUser: Get details of a specific user
# - listDirectoryRoles: List available directory roles

# Prerequisites:
# - Entra External Identity tenant
# - User account with appropriate permissions (e.g., User Administrator, Global Administrator)
# - Client application registered in Entra External Identity with:
#   - API permissions: User.Read.All, RoleManagement.ReadWrite.Directory
#   - Public client flows enabled (for device code flow)
# - OR use username/password flow (requires app configured for Resource Owner Password Credentials)

# Variables needed:
# - externalTenantId: Your Entra External Identity tenant ID
# - clientId: Your application (client) ID
# - username: User email/UPN (for password flow)
# - password: User password (for password flow)
# - userIdToAssignRole: Object ID of user to assign role to
# - roleDefinitionId: Object ID of the role to assign

# Developer Recommendations:
# - Using the extension humao.rest-client enables transpiling these requests
#   into different languages
# - For production scenarios, consider using device code flow instead of password flow
# - Always use least privilege principle when assigning roles

###

# Option 1: Device Code Flow (Recommended for security)
# Step 1: Initiate device code flow
# @name deviceCodeLogin
POST https://login.microsoftonline.com/{{externalTenantId}}/oauth2/v2.0/devicecode
Content-Type: application/x-www-form-urlencoded

scope=https%3A%2F%2Fgraph.microsoft.com%2FUser.Read.All%20https%3A%2F%2Fgraph.microsoft.com%2FRoleManagement.ReadWrite.Directory%20https%3A%2F%2Fgraph.microsoft.com%2FDirectory.Read.All
&client_id={{clientId}}

###

# Step 2: Complete device code flow after user authentication
# Use the device code from above response and authenticate in browser
# @name deviceCodeToken
POST https://login.microsoftonline.com/{{externalTenantId}}/oauth2/v2.0/token
Content-Type: application/x-www-form-urlencoded

grant_type=urn:ietf:params:oauth:grant-type:device_code
&client_id={{clientId}}
&device_code={{deviceCodeLogin.response.body.device_code}}

###

# Option 2: Resource Owner Password Credentials Flow (Less secure, use with caution)
# Direct login with username and password
# @name passwordLogin
POST https://login.microsoftonline.com/{{externalTenantId}}/oauth2/v2.0/token
Content-Type: application/x-www-form-urlencoded

grant_type=password
&client_id={{clientId}}
&username={{username}}
&password={{password}}
&scope=https%3A%2F%2Fgraph.microsoft.com%2FUser.Read.All%20https%3A%2F%2Fgraph.microsoft.com%2FRoleManagement.ReadWrite.Directory%20https%3A%2F%2Fgraph.microsoft.com%2FDirectory.Read.All

###

# Set access token (use either deviceCodeToken or passwordLogin response)
@accessToken = {{deviceCodeToken.response.body.access_token}}
# Alternative: @accessToken = {{passwordLogin.response.body.access_token}}

###

# List all users in the directory
# https://learn.microsoft.com/en-us/graph/api/user-list
# @name listUsers
GET https://graph.microsoft.com/v1.0/users
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# List users with specific properties
# @name listUsersWithProperties
GET https://graph.microsoft.com/v1.0/users?$select=id,displayName,userPrincipalName,mail,accountEnabled&$orderby=displayName
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# Get details of a specific user
# @name getUser
GET https://graph.microsoft.com/v1.0/users/{{userIdToGetDetails}}
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# List all directory roles
# https://learn.microsoft.com/en-us/graph/api/directoryrole-list
# @name listDirectoryRoles
GET https://graph.microsoft.com/v1.0/directoryRoles
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# List directory role templates (available roles that can be activated)
# @name listDirectoryRoleTemplates
GET https://graph.microsoft.com/v1.0/directoryRoleTemplates
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# Get members of a specific directory role
# @name getRoleMembers
GET https://graph.microsoft.com/v1.0/directoryRoles/{{roleDefinitionId}}/members
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# Assign a directory role to a user
# https://learn.microsoft.com/en-us/graph/api/directoryrole-post-members
# @name assignRole
POST https://graph.microsoft.com/v1.0/directoryRoles/{{roleDefinitionId}}/members/$ref
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "@odata.id": "https://graph.microsoft.com/v1.0/users/{{userIdToAssignRole}}"
}

###

# Remove a user from a directory role
# @name removeRoleAssignment
DELETE https://graph.microsoft.com/v1.0/directoryRoles/{{roleDefinitionId}}/members/{{userIdToAssignRole}}/$ref
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# Create a new user (requires User Administrator or Global Administrator role)
# @name createUser
POST https://graph.microsoft.com/v1.0/users
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "accountEnabled": true,
  "displayName": "New Test User",
  "mailNickname": "newtestuser",
  "userPrincipalName": "newtestuser@{{externalTenantDomain}}",
  "passwordProfile": {
    "forceChangePasswordNextSignIn": true,
    "password": "TempPassword123!"
  }
}

###

# Update user properties
# @name updateUser
PATCH https://graph.microsoft.com/v1.0/users/{{userIdToUpdate}}
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "displayName": "Updated Display Name",
  "jobTitle": "Senior Administrator"
}

###

# Get current user's profile (who am I?)
# @name getCurrentUser
GET https://graph.microsoft.com/v1.0/me
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# List applications in the directory
# @name listApplications
GET https://graph.microsoft.com/v1.0/applications?$select=id,displayName,appId
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# Check token expiration and refresh if needed
# @name refreshToken
POST https://login.microsoftonline.com/{{externalTenantId}}/oauth2/v2.0/token
Content-Type: application/x-www-form-urlencoded

grant_type=refresh_token
&client_id={{clientId}}
&refresh_token={{deviceCodeToken.response.body.refresh_token}}
&scope=https%3A%2F%2Fgraph.microsoft.com%2FUser.Read.All%20https%3A%2F%2Fgraph.microsoft.com%2FRoleManagement.ReadWrite.Directory%20https%3A%2F%2Fgraph.microsoft.com%2FDirectory.Read.All

###